create table "public"."banned_users" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid not null
);


CREATE UNIQUE INDEX banned_users_pkey ON public.banned_users USING btree (id);

alter table "public"."banned_users" add constraint "banned_users_pkey" PRIMARY KEY using index "banned_users_pkey";

alter table "public"."banned_users" add constraint "banned_users_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."banned_users" validate constraint "banned_users_user_id_fkey";

grant delete on table "public"."banned_users" to "anon";

grant insert on table "public"."banned_users" to "anon";

grant references on table "public"."banned_users" to "anon";

grant select on table "public"."banned_users" to "anon";

grant trigger on table "public"."banned_users" to "anon";

grant truncate on table "public"."banned_users" to "anon";

grant update on table "public"."banned_users" to "anon";

grant delete on table "public"."banned_users" to "authenticated";

grant insert on table "public"."banned_users" to "authenticated";

grant references on table "public"."banned_users" to "authenticated";

grant select on table "public"."banned_users" to "authenticated";

grant trigger on table "public"."banned_users" to "authenticated";

grant truncate on table "public"."banned_users" to "authenticated";

grant update on table "public"."banned_users" to "authenticated";

grant delete on table "public"."banned_users" to "service_role";

grant insert on table "public"."banned_users" to "service_role";

grant references on table "public"."banned_users" to "service_role";

grant select on table "public"."banned_users" to "service_role";

grant trigger on table "public"."banned_users" to "service_role";

grant truncate on table "public"."banned_users" to "service_role";

grant update on table "public"."banned_users" to "service_role";


