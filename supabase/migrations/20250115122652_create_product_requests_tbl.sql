create type "public"."product_request_status" as enum ('pending', 'approved', 'rejected');

create table "public"."product_requests" (
    "id" bigint generated by default as identity not null,
    "name" text not null,
    "desc" text default ''::text,
    "status" product_request_status not null default 'pending'::product_request_status,
    "product_id" bigint,
    "requested_by" uuid not null default auth.uid(),
    "requested_at" timestamp with time zone not null default now(),
    "reviewed_by" uuid,
    "reviewed_at" timestamp with time zone
);


CREATE UNIQUE INDEX product_requests_name_key ON public.product_requests USING btree (name);

CREATE UNIQUE INDEX product_requests_pkey ON public.product_requests USING btree (id);

alter table "public"."product_requests" add constraint "product_requests_pkey" PRIMARY KEY using index "product_requests_pkey";

alter table "public"."product_requests" add constraint "product_requests_name_key" UNIQUE using index "product_requests_name_key";

alter table "public"."product_requests" add constraint "product_requests_product_id_fkey" FOREIGN KEY (product_id) REFERENCES products(id) not valid;

alter table "public"."product_requests" validate constraint "product_requests_product_id_fkey";

alter table "public"."product_requests" add constraint "product_requests_requested_by_fkey" FOREIGN KEY (requested_by) REFERENCES auth.users(id) not valid;

alter table "public"."product_requests" validate constraint "product_requests_requested_by_fkey";

alter table "public"."product_requests" add constraint "product_requests_reviewed_by_fkey" FOREIGN KEY (reviewed_by) REFERENCES auth.users(id) not valid;

alter table "public"."product_requests" validate constraint "product_requests_reviewed_by_fkey";

grant delete on table "public"."product_requests" to "anon";

grant insert on table "public"."product_requests" to "anon";

grant references on table "public"."product_requests" to "anon";

grant select on table "public"."product_requests" to "anon";

grant trigger on table "public"."product_requests" to "anon";

grant truncate on table "public"."product_requests" to "anon";

grant update on table "public"."product_requests" to "anon";

grant delete on table "public"."product_requests" to "authenticated";

grant insert on table "public"."product_requests" to "authenticated";

grant references on table "public"."product_requests" to "authenticated";

grant select on table "public"."product_requests" to "authenticated";

grant trigger on table "public"."product_requests" to "authenticated";

grant truncate on table "public"."product_requests" to "authenticated";

grant update on table "public"."product_requests" to "authenticated";

grant delete on table "public"."product_requests" to "service_role";

grant insert on table "public"."product_requests" to "service_role";

grant references on table "public"."product_requests" to "service_role";

grant select on table "public"."product_requests" to "service_role";

grant trigger on table "public"."product_requests" to "service_role";

grant truncate on table "public"."product_requests" to "service_role";

grant update on table "public"."product_requests" to "service_role";


